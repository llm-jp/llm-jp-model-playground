// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
{
  "Mappings": {
    "DlcRepositoryAccountMap": {
      "ap-east-1": {
        "value": "871362719292",
      },
      "ap-northeast-1": {
        "value": "763104351884",
      },
      "ap-northeast-2": {
        "value": "763104351884",
      },
      "ap-south-1": {
        "value": "763104351884",
      },
      "ap-southeast-1": {
        "value": "763104351884",
      },
      "ap-southeast-2": {
        "value": "763104351884",
      },
      "ca-central-1": {
        "value": "763104351884",
      },
      "cn-north-1": {
        "value": "727897471807",
      },
      "cn-northwest-1": {
        "value": "727897471807",
      },
      "eu-central-1": {
        "value": "763104351884",
      },
      "eu-north-1": {
        "value": "763104351884",
      },
      "eu-west-1": {
        "value": "763104351884",
      },
      "eu-west-2": {
        "value": "763104351884",
      },
      "eu-west-3": {
        "value": "763104351884",
      },
      "me-south-1": {
        "value": "217643126080",
      },
      "sa-east-1": {
        "value": "763104351884",
      },
      "us-east-1": {
        "value": "763104351884",
      },
      "us-east-2": {
        "value": "763104351884",
      },
      "us-west-1": {
        "value": "763104351884",
      },
      "us-west-2": {
        "value": "763104351884",
      },
    },
  },
  "Outputs": {
    "APIApiEndpoint036547C6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "APIApiFFA96F67",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "APIApiDeploymentStageapiCD55D117",
            },
            "/",
          ],
        ],
      },
    },
    "ApiEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "APIApiFFA96F67",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "APIApiDeploymentStageapiCD55D117",
            },
            "/",
          ],
        ],
      },
    },
    "IdPoolId": {
      "Value": {
        "Ref": "AuthIdentityPool659E7F64",
      },
    },
    "PredictStreamFunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "APIPredictStream44DDBC25",
          "Arn",
        ],
      },
    },
    "RagEnabled": {
      "Value": "false",
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region",
      },
    },
    "SageMakerEndpointConfigName": {
      "Value": ""llm-jp-endpoint-config-20231208113413"",
    },
    "SageMakerEndpointName": {
      "Value": ""llm-jp-endpoint"",
    },
    "SageMakerModels": {
      "Value": "[{"name":"llm-jp-13b-instruct-full-jaster-dolly-oasst-v1","path":"models/llm-jp-13b-instruct-full-jaster-dolly-oasst-v1.0.tar.gz","prompt_template_name":"llmJp"},{"name":"llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1","path":"models/llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1.0.tar.gz","prompt_template_name":"llmJp"}]",
    },
    "SelfSignUpEnabled": {
      "Value": "false",
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "AuthUserPoolclientA74673A9",
      },
    },
    "UserPoolId": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
    "WebUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "ApiWebCloudFrontDistributionA115FBC3",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "APIApiAccountF2C87424": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "APIApiFFA96F67",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "APIApiCloudWatchRoleD747A0A6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "APIApiApi4XXDCF913C8": {
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::GatewayResponse",
    },
    "APIApiApi5XX11B67643": {
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::GatewayResponse",
    },
    "APIApiCloudWatchRoleD747A0A6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "APIApiDeployment3A50212384fc59488e8dda5b4aff9de72524de0a": {
      "DependsOn": [
        "APIApiApi4XXDCF913C8",
        "APIApiApi5XX11B67643",
        "APIApichatschatIdDELETE4578D41B",
        "APIApichatschatIdfeedbacksOPTIONS7AB34AA5",
        "APIApichatschatIdfeedbacksPOST3E9ACBEC",
        "APIApichatschatIdfeedbacksF371F57A",
        "APIApichatschatIdGET152C9123",
        "APIApichatschatIdmessagesGET94AB097F",
        "APIApichatschatIdmessagesOPTIONS20207E07",
        "APIApichatschatIdmessagesPOST4197DA8F",
        "APIApichatschatIdmessagesAF527CE8",
        "APIApichatschatIdOPTIONS4498230E",
        "APIApichatschatIdE67019A6",
        "APIApichatschatIdtitleOPTIONSFA0EB6B7",
        "APIApichatschatIdtitlePUT15099F54",
        "APIApichatschatIdtitleC5AEA917",
        "APIApichatsGET40767623",
        "APIApichatsOPTIONSDFF708CB",
        "APIApichatsPOSTF32299AA",
        "APIApichatsE061702A",
        "APIApiendpointDELETE2F28D960",
        "APIApiendpointGETA9A4FC8C",
        "APIApiendpointOPTIONSFFFB5A9D",
        "APIApiendpointPOST76ED72C6",
        "APIApiendpoint12F34C33",
        "APIApiOPTIONSE134DC36",
        "APIApipredictOPTIONS9065A8D6",
        "APIApipredictPOST376D7D2E",
        "APIApipredict6CA3C413",
        "APIApipredicttitleOPTIONS3DCF08ED",
        "APIApipredicttitlePOSTAC11F63E",
        "APIApipredicttitle8F6A9913",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "APIApiDeploymentStageapiCD55D117": {
      "DependsOn": [
        "APIApiAccountF2C87424",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "APIApiDeployment3A50212384fc59488e8dda5b4aff9de72524de0a",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
        "StageName": "api",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "APIApiFFA96F67": {
      "Properties": {
        "Name": "Api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "APIApiOPTIONSE134DC36": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "APIApiFFA96F67",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatsE061702A": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "APIApiFFA96F67",
            "RootResourceId",
          ],
        },
        "PathPart": "chats",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApichatsGET40767623": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIListChats12807275",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatsE061702A",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatsGETApiPermissionMyTestStackAPIApi900E3F7CGETchats2B3643FA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIListChats12807275",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/GET/chats",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatsGETApiPermissionTestMyTestStackAPIApi900E3F7CGETchats21DA10C1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIListChats12807275",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/GET/chats",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatsOPTIONSDFF708CB": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApichatsE061702A",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatsPOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTchats574FD4EA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APICreateChatE07AFAF4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/chats",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatsPOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTchatsA5051C56": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APICreateChatE07AFAF4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/chats",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatsPOSTF32299AA": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APICreateChatE07AFAF4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatsE061702A",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdDELETE4578D41B": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIDeleteChat1517278C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdDELETEApiPermissionMyTestStackAPIApi900E3F7CDELETEchatschatId7FF0FC07": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIDeleteChat1517278C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/DELETE/chats/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdDELETEApiPermissionTestMyTestStackAPIApi900E3F7CDELETEchatschatId25248785": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIDeleteChat1517278C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/DELETE/chats/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdE67019A6": {
      "Properties": {
        "ParentId": {
          "Ref": "APIApichatsE061702A",
        },
        "PathPart": "{chatId}",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApichatschatIdGET152C9123": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIFindChatbyId74476825",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdGETApiPermissionMyTestStackAPIApi900E3F7CGETchatschatId0D557D86": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIFindChatbyId74476825",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/GET/chats/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdGETApiPermissionTestMyTestStackAPIApi900E3F7CGETchatschatId93245DD6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIFindChatbyId74476825",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/GET/chats/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdOPTIONS4498230E": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdfeedbacksF371F57A": {
      "Properties": {
        "ParentId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "PathPart": "feedbacks",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApichatschatIdfeedbacksOPTIONS7AB34AA5": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApichatschatIdfeedbacksF371F57A",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdfeedbacksPOST3E9ACBEC": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIUpdateFeedback2F9276A1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdfeedbacksF371F57A",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdfeedbacksPOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTchatschatIdfeedbacks911138A9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIUpdateFeedback2F9276A1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/chats/*/feedbacks",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdfeedbacksPOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTchatschatIdfeedbacks5E4016A8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIUpdateFeedback2F9276A1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/chats/*/feedbacks",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdmessagesAF527CE8": {
      "Properties": {
        "ParentId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "PathPart": "messages",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApichatschatIdmessagesGET94AB097F": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIListMessages536ED2CC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdmessagesAF527CE8",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdmessagesGETApiPermissionMyTestStackAPIApi900E3F7CGETchatschatIdmessages0F74039F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIListMessages536ED2CC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/GET/chats/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdmessagesGETApiPermissionTestMyTestStackAPIApi900E3F7CGETchatschatIdmessagesEDAB32A6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIListMessages536ED2CC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/GET/chats/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdmessagesOPTIONS20207E07": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApichatschatIdmessagesAF527CE8",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdmessagesPOST4197DA8F": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APICreateMessages1C3421C0",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdmessagesAF527CE8",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdmessagesPOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTchatschatIdmessagesD516A16F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APICreateMessages1C3421C0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/chats/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdmessagesPOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTchatschatIdmessages75035B05": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APICreateMessages1C3421C0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/chats/*/messages",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdtitleC5AEA917": {
      "Properties": {
        "ParentId": {
          "Ref": "APIApichatschatIdE67019A6",
        },
        "PathPart": "title",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApichatschatIdtitleOPTIONSFA0EB6B7": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApichatschatIdtitleC5AEA917",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdtitlePUT15099F54": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "PUT",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIUpdateChatTitleF8FCA547",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApichatschatIdtitleC5AEA917",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApichatschatIdtitlePUTApiPermissionMyTestStackAPIApi900E3F7CPUTchatschatIdtitle08CC8BDB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIUpdateChatTitleF8FCA547",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/PUT/chats/*/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApichatschatIdtitlePUTApiPermissionTestMyTestStackAPIApi900E3F7CPUTchatschatIdtitle83BF212A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIUpdateChatTitleF8FCA547",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/PUT/chats/*/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpoint12F34C33": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "APIApiFFA96F67",
            "RootResourceId",
          ],
        },
        "PathPart": "endpoint",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApiendpointDELETE2F28D960": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIcreateEndpoint53133CFF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApiendpoint12F34C33",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApiendpointDELETEApiPermissionMyTestStackAPIApi900E3F7CDELETEendpointB8CB6B5F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcreateEndpoint53133CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/DELETE/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpointDELETEApiPermissionTestMyTestStackAPIApi900E3F7CDELETEendpointA0EC0B5E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcreateEndpoint53133CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/DELETE/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpointGETA9A4FC8C": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIcheckEndpoint6F15C6CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApiendpoint12F34C33",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApiendpointGETApiPermissionMyTestStackAPIApi900E3F7CGETendpointE5F9838B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcheckEndpoint6F15C6CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/GET/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpointGETApiPermissionTestMyTestStackAPIApi900E3F7CGETendpointA060073D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcheckEndpoint6F15C6CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/GET/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpointOPTIONSFFFB5A9D": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApiendpoint12F34C33",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApiendpointPOST76ED72C6": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIcreateEndpoint53133CFF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApiendpoint12F34C33",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApiendpointPOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTendpointBC1ADBC7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcreateEndpoint53133CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApiendpointPOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTendpoint0715EF4F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIcreateEndpoint53133CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/endpoint",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApipredict6CA3C413": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "APIApiFFA96F67",
            "RootResourceId",
          ],
        },
        "PathPart": "predict",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApipredictOPTIONS9065A8D6": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApipredict6CA3C413",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApipredictPOST376D7D2E": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIPredict09E4E4FF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApipredict6CA3C413",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApipredictPOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTpredictAA9163AE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIPredict09E4E4FF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/predict",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApipredictPOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTpredict367054DB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIPredict09E4E4FF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/predict",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApipredicttitle8F6A9913": {
      "Properties": {
        "ParentId": {
          "Ref": "APIApipredict6CA3C413",
        },
        "PathPart": "title",
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIApipredicttitleOPTIONS3DCF08ED": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "APIApipredicttitle8F6A9913",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApipredicttitlePOSTAC11F63E": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "APIAuthorizer9DCC037B",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "APIPredictTitle95F64FA4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIApipredicttitle8F6A9913",
        },
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIApipredicttitlePOSTApiPermissionMyTestStackAPIApi900E3F7CPOSTpredicttitle518E2685": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIPredictTitle95F64FA4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/",
              {
                "Ref": "APIApiDeploymentStageapiCD55D117",
              },
              "/POST/predict/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIApipredicttitlePOSTApiPermissionTestMyTestStackAPIApi900E3F7CPOSTpredicttitle2736C084": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIPredictTitle95F64FA4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIApiFFA96F67",
              },
              "/test-invoke-stage/POST/predict/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIAuthorizer9DCC037B": {
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "MyTestStackAPIAuthorizerBE594E19",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "AuthUserPool8115E87F",
              "Arn",
            ],
          },
        ],
        "RestApiId": {
          "Ref": "APIApiFFA96F67",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "APICreateChatE07AFAF4": {
      "DependsOn": [
        "APICreateChatServiceRoleDefaultPolicy0072EEC4",
        "APICreateChatServiceRoleC49F5DA3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "0caa1d8af824f7f430dafafd4695dc8cc7110ec4df0381f392ff886a9f4c4ac6.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APICreateChatServiceRoleC49F5DA3",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APICreateChatServiceRoleC49F5DA3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APICreateChatServiceRoleDefaultPolicy0072EEC4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APICreateChatServiceRoleDefaultPolicy0072EEC4",
        "Roles": [
          {
            "Ref": "APICreateChatServiceRoleC49F5DA3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APICreateMessages1C3421C0": {
      "DependsOn": [
        "APICreateMessagesServiceRoleDefaultPolicy6B2A82CC",
        "APICreateMessagesServiceRole3B693939",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "c6d740f94d4bc9b54b9f5b1a24e394a8955da2d090a59767e15b66898198b6e3.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APICreateMessagesServiceRole3B693939",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APICreateMessagesServiceRole3B693939": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APICreateMessagesServiceRoleDefaultPolicy6B2A82CC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APICreateMessagesServiceRoleDefaultPolicy6B2A82CC",
        "Roles": [
          {
            "Ref": "APICreateMessagesServiceRole3B693939",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIDeleteChat1517278C": {
      "DependsOn": [
        "APIDeleteChatServiceRoleDefaultPolicy010EC0CA",
        "APIDeleteChatServiceRole6340C3C0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "53a78b9548c47bff5f2f89de6960dba7b34f3191fa0de8f9568e7c0879bc6be1.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIDeleteChatServiceRole6340C3C0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIDeleteChatServiceRole6340C3C0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIDeleteChatServiceRoleDefaultPolicy010EC0CA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIDeleteChatServiceRoleDefaultPolicy010EC0CA",
        "Roles": [
          {
            "Ref": "APIDeleteChatServiceRole6340C3C0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIDeleteEndpointAllowInvokeMyTestStackAPIDeleteEndpointTopicAFA3A441DE57DBD2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "APIDeleteEndpointB86DCA21",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "APIDeleteEndpointTopicD804E77B",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIDeleteEndpointB86DCA21": {
      "DependsOn": [
        "APIDeleteEndpointServiceRoleDefaultPolicy7920AFC9",
        "APIDeleteEndpointServiceRole625EDFC9",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "94b426ba0e898f8941f047304a96c20cf4766ca3e49dcae506d497f8025d2a95.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ENDPOINT_NAME": "llm-jp-endpoint",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIDeleteEndpointServiceRole625EDFC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIDeleteEndpointDeleteEndpointTopic177439FC": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "APIDeleteEndpointB86DCA21",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "APIDeleteEndpointTopicD804E77B",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "APIDeleteEndpointServiceRole625EDFC9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIDeleteEndpointServiceRoleDefaultPolicy7920AFC9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIDeleteEndpointServiceRoleDefaultPolicy7920AFC9",
        "Roles": [
          {
            "Ref": "APIDeleteEndpointServiceRole625EDFC9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIDeleteEndpointTopicD804E77B": {
      "Type": "AWS::SNS::Topic",
    },
    "APIFindChatbyId74476825": {
      "DependsOn": [
        "APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A",
        "APIFindChatbyIdServiceRole35A1548F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "af80ccfe8ea89fc0cf935a813dcbff05de72e65af9454183991a4f5a112c086f.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIFindChatbyIdServiceRole35A1548F",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIFindChatbyIdServiceRole35A1548F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A",
        "Roles": [
          {
            "Ref": "APIFindChatbyIdServiceRole35A1548F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIListChats12807275": {
      "DependsOn": [
        "APIListChatsServiceRoleDefaultPolicyD6E68E36",
        "APIListChatsServiceRole336654B4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "12d091d805a4af41db11fc3394d783c38c1a5663de8f7837ff849266dd81cc77.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIListChatsServiceRole336654B4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIListChatsServiceRole336654B4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIListChatsServiceRoleDefaultPolicyD6E68E36": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIListChatsServiceRoleDefaultPolicyD6E68E36",
        "Roles": [
          {
            "Ref": "APIListChatsServiceRole336654B4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIListMessages536ED2CC": {
      "DependsOn": [
        "APIListMessagesServiceRoleDefaultPolicy8E659637",
        "APIListMessagesServiceRole4C0AC764",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "42f548eefa37899f7e461aa78e3cd25bf820ffe93b88601d13a06c3dc46368bc.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIListMessagesServiceRole4C0AC764",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIListMessagesServiceRole4C0AC764": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIListMessagesServiceRoleDefaultPolicy8E659637": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIListMessagesServiceRoleDefaultPolicy8E659637",
        "Roles": [
          {
            "Ref": "APIListMessagesServiceRole4C0AC764",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APINoTrafficAlarmEC6715D0": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "APIDeleteEndpointTopicD804E77B",
          },
        ],
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "APIPredictStream44DDBC25",
            },
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "APIPredict09E4E4FF": {
      "DependsOn": [
        "APIPredictServiceRoleDefaultPolicy0D908F6B",
        "APIPredictServiceRole6B8A4E2C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8c9107561407eafbb311cc5aff53c31b0b7ae9efad6268c4ac64acc0048413ae.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MODEL_NAME": "llm-jp-endpoint",
            "MODEL_REGION": {
              "Ref": "AWS::Region",
            },
            "MODEL_TYPE": "sagemaker",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIPredictServiceRole6B8A4E2C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIPredictServiceRole6B8A4E2C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIPredictServiceRoleDefaultPolicy0D908F6B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIPredictServiceRoleDefaultPolicy0D908F6B",
        "Roles": [
          {
            "Ref": "APIPredictServiceRole6B8A4E2C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIPredictStream44DDBC25": {
      "DependsOn": [
        "APIPredictStreamServiceRoleDefaultPolicy07B1CCF0",
        "APIPredictStreamServiceRole2B2C7355",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2494269eec98c2557e532c8510ca7d18e08af37a3fc0c1ed3c7489217430b03f.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MODEL_NAME": "llm-jp-endpoint",
            "MODEL_REGION": {
              "Ref": "AWS::Region",
            },
            "MODEL_TYPE": "sagemaker",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIPredictStreamServiceRole2B2C7355",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIPredictStreamServiceRole2B2C7355": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIPredictStreamServiceRoleDefaultPolicy07B1CCF0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIPredictStreamServiceRoleDefaultPolicy07B1CCF0",
        "Roles": [
          {
            "Ref": "APIPredictStreamServiceRole2B2C7355",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIPredictTitle95F64FA4": {
      "DependsOn": [
        "APIPredictTitleServiceRoleDefaultPolicy2FBAD754",
        "APIPredictTitleServiceRoleAC90BDCD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b583b7211458a029b03a75fbe15afe3f17a10b8ee881890c6960f405a6791df4.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MODEL_NAME": "llm-jp-endpoint",
            "MODEL_REGION": {
              "Ref": "AWS::Region",
            },
            "MODEL_TYPE": "sagemaker",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIPredictTitleServiceRoleAC90BDCD",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIPredictTitleServiceRoleAC90BDCD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIPredictTitleServiceRoleDefaultPolicy2FBAD754": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIPredictTitleServiceRoleDefaultPolicy2FBAD754",
        "Roles": [
          {
            "Ref": "APIPredictTitleServiceRoleAC90BDCD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIUpdateChatTitleF8FCA547": {
      "DependsOn": [
        "APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E",
        "APIUpdateChatTitleServiceRoleDF447D6E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4aab97388187755a6a859e129b2e86110a35aca89e829347e2d9f1e2728b811b.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIUpdateChatTitleServiceRoleDF447D6E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIUpdateChatTitleServiceRoleDF447D6E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E",
        "Roles": [
          {
            "Ref": "APIUpdateChatTitleServiceRoleDF447D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIUpdateFeedback2F9276A1": {
      "DependsOn": [
        "APIUpdateFeedbackServiceRoleDefaultPolicyB3422366",
        "APIUpdateFeedbackServiceRole1A31F75D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "0d0177723cb72c44d7ea9744732331d85d40274fe871bf5b7ef0dff3c641a276.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": {
              "Ref": "DatabaseTableF104A135",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIUpdateFeedbackServiceRole1A31F75D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIUpdateFeedbackServiceRole1A31F75D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIUpdateFeedbackServiceRoleDefaultPolicyB3422366": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseTableF104A135",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DatabaseTableF104A135",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIUpdateFeedbackServiceRoleDefaultPolicyB3422366",
        "Roles": [
          {
            "Ref": "APIUpdateFeedbackServiceRole1A31F75D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIcheckEndpoint6F15C6CE": {
      "DependsOn": [
        "APIcheckEndpointServiceRoleDefaultPolicyF2663D1C",
        "APIcheckEndpointServiceRoleDA453C5A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6f5a7b2920a8cb0b899d8d3f5726b5d1909094240bc0855d58fc4db057f9d478.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ENDPOINT_NAME": "llm-jp-endpoint",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIcheckEndpointServiceRoleDA453C5A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIcheckEndpointServiceRoleDA453C5A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIcheckEndpointServiceRoleDefaultPolicyF2663D1C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIcheckEndpointServiceRoleDefaultPolicyF2663D1C",
        "Roles": [
          {
            "Ref": "APIcheckEndpointServiceRoleDA453C5A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "APIcreateEndpoint53133CFF": {
      "DependsOn": [
        "APIcreateEndpointServiceRoleDefaultPolicyB478D169",
        "APIcreateEndpointServiceRole10E65B3B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a54f181e777572f64a1c5651572493ec5b360f107f8dc05454b3ff2848fcb49c.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "ENDPOINT_CONFIG_NAME": "llm-jp-endpoint-config-20231208113413",
            "ENDPOINT_NAME": "llm-jp-endpoint",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "APIcreateEndpointServiceRole10E65B3B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "APIcreateEndpointServiceRole10E65B3B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIcreateEndpointServiceRoleDefaultPolicyB478D169": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DescribeEndpoint",
                "sagemaker:InvokeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/llm-jp-endpoint",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/llm-jp-endpoint-config-20231208113413",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIcreateEndpointServiceRoleDefaultPolicyB478D169",
        "Roles": [
          {
            "Ref": "APIcreateEndpointServiceRole10E65B3B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiBuildWeb746ABF13": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8",
            "Arn",
          ],
        },
        "buildCommands": [
          "npm ci",
          "npm run web:build",
        ],
        "codeBuildProjectName": {
          "Ref": "ApiBuildWebProjectDF2CE9D0",
        },
        "destinationBucketName": {
          "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
        },
        "destinationObjectKey": "4e0c822b8a385a860da7905e20e55d65.zip",
        "environment": {
          "VITE_APP_API_ENDPOINT": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "APIApiFFA96F67",
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                {
                  "Ref": "APIApiDeploymentStageapiCD55D117",
                },
                "/",
              ],
            ],
          },
          "VITE_APP_IDENTITY_POOL_ID": {
            "Ref": "AuthIdentityPool659E7F64",
          },
          "VITE_APP_PREDICT_STREAM_FUNCTION_ARN": {
            "Fn::GetAtt": [
              "APIPredictStream44DDBC25",
              "Arn",
            ],
          },
          "VITE_APP_RAG_ENABLED": "false",
          "VITE_APP_REGION": {
            "Ref": "AWS::Region",
          },
          "VITE_APP_SAGEMAKER_ENDPOINT_CONFIG_NAME": "llm-jp-endpoint-config-20231208113413",
          "VITE_APP_SAGEMAKER_ENDPOINT_NAME": "llm-jp-endpoint",
          "VITE_APP_SAGEMAKER_MODELS": "[{"name":"llm-jp-13b-instruct-full-jaster-dolly-oasst-v1","path":"models/llm-jp-13b-instruct-full-jaster-dolly-oasst-v1.0.tar.gz","prompt_template_name":"llmJp"},{"name":"llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1","path":"models/llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1.0.tar.gz","prompt_template_name":"llmJp"}]",
          "VITE_APP_SELF_SIGN_UP_ENABLED": "false",
          "VITE_APP_USER_POOL_CLIENT_ID": {
            "Ref": "AuthUserPoolclientA74673A9",
          },
          "VITE_APP_USER_POOL_ID": {
            "Ref": "AuthUserPool8115E87F",
          },
        },
        "outputSourceDirectory": "../packages/web/dist",
        "sources": [
          {
            "extractPath": "..",
            "sourceBucketName": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "sourceObjectKey": "e87a90374674d57afae1ad0d76931b5fc181a097dde91cd9334b3ae83303863d.zip",
          },
        ],
        "type": "NodejsBuild",
        "workingDirectory": "..",
      },
      "Type": "Custom::CDKNodejsBuild",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiBuildWebDeployAwsCliLayer187512BE": {
      "DependsOn": [
        "ApiBuildWeb746ABF13",
      ],
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "ApiBuildWebDeployCustomResourceA9A0D3A1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ApiBuildWeb746ABF13",
      ],
      "Properties": {
        "DestinationBucketName": {
          "Ref": "ApiWebS3Bucket26EF98D6",
        },
        "DistributionId": {
          "Ref": "ApiWebCloudFrontDistributionA115FBC3",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "4e0c822b8a385a860da7905e20e55d65.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiBuildWebProjectDF2CE9D0": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "ApiBuildWebProjectRole8A770CFE",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "runtime-versions": {
        "nodejs": 18
      }
    },
    "build": {
      "commands": [
        "current_dir=$(pwd)",
        "\\necho \\"$input\\"\\nfor obj in $(echo \\"$input\\" | jq -r '.[] | @base64'); do\\n  decoded=$(echo \\"$obj\\" | base64 --decode)\\n  assetUrl=$(echo \\"$decoded\\" | jq -r '.assetUrl')\\n  extractPath=$(echo \\"$decoded\\" | jq -r '.extractPath')\\n  commands=$(echo \\"$decoded\\" | jq -r '.commands')\\n\\n  # Download the zip file\\n  aws s3 cp \\"$assetUrl\\" temp.zip\\n\\n  # Extract the zip file to the extractPath directory\\n  mkdir -p \\"$extractPath\\"\\n  unzip temp.zip -d \\"$extractPath\\"\\n\\n  # Remove the zip file\\n  rm temp.zip\\n\\n  # Run the specified commands in the extractPath directory\\n  cd \\"$extractPath\\"\\n  ls -la\\n  eval \\"$commands\\"\\n  cd \\"$current_dir\\"\\n  ls -la\\ndone\\n              ",
        "ls -la",
        "cd \\"$workingDirectory\\"",
        "eval \\"$buildCommands\\"",
        "ls -la",
        "cd \\"$current_dir\\"",
        "cd \\"$outputSourceDirectory\\"",
        "zip -r output.zip ./",
        "aws s3 cp output.zip \\"s3://$destinationBucketName/$destinationObjectKey\\""
      ]
    },
    "post_build": {
      "commands": [
        "echo Build completed on \`date\`",
        "\\nSTATUS='SUCCESS'\\nif [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ] # Test if the build is failing\\nthen\\nSTATUS='FAILED'\\nREASON=\\"NodejsBuild failed. See CloudWatch Log stream for the detailed reason: \\nhttps://$AWS_REGION.console.aws.amazon.com/cloudwatch/home?region=$AWS_REGION#logsV2:log-groups/log-group/\\\\$252Faws\\\\$252Fcodebuild\\\\$252F$projectName/log-events/$CODEBUILD_LOG_PATH\\"\\nfi\\ncat <<EOF > payload.json\\n{\\n  \\"StackId\\": \\"$stackId\\",\\n  \\"RequestId\\": \\"$requestId\\",\\n  \\"LogicalResourceId\\":\\"$logicalResourceId\\",\\n  \\"PhysicalResourceId\\": \\"$destinationObjectKey\\",\\n  \\"Status\\": \\"$STATUS\\",\\n  \\"Reason\\": \\"$REASON\\"\\n}\\nEOF\\ncurl -vv -i -X PUT -H 'Content-Type:' -d \\"@payload.json\\" \\"$responseURL\\"\\n              "
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "ApiBuildWebProjectRole8A770CFE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiBuildWebProjectRoleDefaultPolicyEA537DDE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "ApiBuildWebProjectDF2CE9D0",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "ApiBuildWebProjectDF2CE9D0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "ApiBuildWebProjectDF2CE9D0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiBuildWebProjectRoleDefaultPolicyEA537DDE",
        "Roles": [
          {
            "Ref": "ApiBuildWebProjectRole8A770CFE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiWebCloudFrontDistributionA115FBC3": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion",
            },
          ],
        },
      },
      "Properties": {
        "DistributionConfig": {
          "CustomErrorResponses": [
            {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "MyTestStackApiWebCloudFrontDistributionOrigin1AEB7C7E8",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "ApiWebCloudfrontLoggingBucketD22C7B67",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "ApiWebS3Bucket26EF98D6",
                  "RegionalDomainName",
                ],
              },
              "Id": "MyTestStackApiWebCloudFrontDistributionOrigin1AEB7C7E8",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "ApiWebCloudFrontDistributionOrigin1S3OriginB8B2F56F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "ApiWebCloudFrontDistributionOrigin1S3OriginB8B2F56F": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for MyTestStackApiWebCloudFrontDistributionOrigin1AEB7C7E8",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "ApiWebCloudfrontLoggingBucketD22C7B67": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for CloudFront Distribution",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiWebCloudfrontLoggingBucketPolicy30112EB3": {
      "Properties": {
        "Bucket": {
          "Ref": "ApiWebCloudfrontLoggingBucketD22C7B67",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiWebCloudfrontLoggingBucketD22C7B67",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiWebCloudfrontLoggingBucketD22C7B67",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ApiWebS3Bucket26EF98D6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "ApiWebS3LoggingBucket16DF416B",
          },
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:218a8557",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiWebS3BucketAutoDeleteObjectsCustomResource533BC7D3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ApiWebS3BucketPolicy9921124D",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ApiWebS3Bucket26EF98D6",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiWebS3BucketPolicy9921124D": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "F16",
              "reason": "Public website bucket policy requires a wildcard principal",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "ApiWebS3Bucket26EF98D6",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiWebS3Bucket26EF98D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiWebS3Bucket26EF98D6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiWebS3Bucket26EF98D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiWebS3Bucket26EF98D6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "ApiWebCloudFrontDistributionOrigin1S3OriginB8B2F56F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ApiWebS3Bucket26EF98D6",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ApiWebS3LoggingBucket16DF416B": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiWebS3LoggingBucketPolicyC0768FF8": {
      "Properties": {
        "Bucket": {
          "Ref": "ApiWebS3LoggingBucket16DF416B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiWebS3LoggingBucket16DF416B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiWebS3LoggingBucket16DF416B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "ApiWebS3Bucket26EF98D6",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ApiWebS3LoggingBucket16DF416B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AuthIdentityPool659E7F64": {
      "DependsOn": [
        "AuthUserPoolclientA74673A9",
        "AuthUserPool8115E87F",
      ],
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "AuthUserPoolclientA74673A9",
            },
            "ProviderName": {
              "Fn::Join": [
                "",
                [
                  "cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "AuthUserPool8115E87F",
                  },
                ],
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "AuthIdentityPoolAuthenticatedRole09311B20": {
      "DependsOn": [
        "AuthUserPoolclientA74673A9",
        "AuthUserPool8115E87F",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "AuthIdentityPool659E7F64",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Authenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "AuthIdentityPool659E7F64",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthIdentityPoolAuthenticatedRoleDefaultPolicy2F0603CE": {
      "DependsOn": [
        "AuthUserPoolclientA74673A9",
        "AuthUserPool8115E87F",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "APIPredictStream44DDBC25",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "APIPredictStream44DDBC25",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthIdentityPoolAuthenticatedRoleDefaultPolicy2F0603CE",
        "Roles": [
          {
            "Ref": "AuthIdentityPoolAuthenticatedRole09311B20",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthIdentityPoolDefaultRoleAttachmentA62DEBB8": {
      "DependsOn": [
        "AuthUserPoolclientA74673A9",
        "AuthUserPool8115E87F",
      ],
      "Properties": {
        "IdentityPoolId": {
          "Ref": "AuthIdentityPool659E7F64",
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "AuthIdentityPoolAuthenticatedRole09311B20",
              "Arn",
            ],
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "AuthIdentityPoolUnauthenticatedRoleA421F307",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "AuthIdentityPoolUnauthenticatedRoleA421F307": {
      "DependsOn": [
        "AuthUserPoolclientA74673A9",
        "AuthUserPool8115E87F",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "AuthIdentityPool659E7F64",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Unauthenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "AuthIdentityPool659E7F64",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "AuthUserPoolclientA74673A9": {
      "Properties": {
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "IdTokenValidity": 1440,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "IdToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "ApiBuildWebDeployAwsCliLayer187512BE",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiWebS3Bucket26EF98D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiWebS3Bucket26EF98D6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "ApiWebS3Bucket26EF98D6",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseTableF104A135": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "createdDate",
            "AttributeType": "S",
          },
          {
            "AttributeName": "feedback",
            "AttributeType": "S",
          },
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "FeedbackIndex",
            "KeySchema": [
              {
                "AttributeName": "feedback",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5,
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "createdDate",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "LLMEndpointConfigB9F09549": {
      "DependsOn": [
        "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1ModelD41FE375",
        "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1RoleDefaultPolicyB1F18C3B",
        "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1Role3F3D80FC",
        "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1Model89E6FD9E",
        "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleDefaultPolicyD06857F2",
        "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleF42A9559",
      ],
      "Properties": {
        "EndpointConfigName": "llm-jp-endpoint-config-20231208113413",
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.g5.2xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1ModelD41FE375",
                "ModelName",
              ],
            },
            "VariantName": "llm-jp-13b-instruct-full-jaster-dolly-oasst-v1",
          },
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.g5.2xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1Model89E6FD9E",
                "ModelName",
              ],
            },
            "VariantName": "llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1",
          },
        ],
      },
      "Type": "AWS::SageMaker::EndpointConfig",
    },
    "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1ModelD41FE375": {
      "DependsOn": [
        "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1RoleDefaultPolicyB1F18C3B",
        "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1Role3F3D80FC",
      ],
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1Role3F3D80FC",
            "Arn",
          ],
        },
        "ModelName": "llm-jp-13b-instruct-full-jaster-dolly-oasst-v1-20231208113413",
        "PrimaryContainer": {
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "DlcRepositoryAccountMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "value",
                  ],
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/djl-inference:0.24.0-deepspeed0.10.0-cu118",
              ],
            ],
          },
          "ModelDataUrl": {
            "Fn::Sub": "https://s3.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}/7745f11fec4528202870984ce9b341345a5dfff3aa905a10a1ce76901306fc8f.gz",
          },
        },
      },
      "Type": "AWS::SageMaker::Model",
    },
    "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1Role3F3D80FC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1RoleDefaultPolicyB1F18C3B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "DlcRepositoryAccountMap",
                        {
                          "Ref": "AWS::Region",
                        },
                        "value",
                      ],
                    },
                    ":repository/djl-inference",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1RoleDefaultPolicyB1F18C3B",
        "Roles": [
          {
            "Ref": "LLMsagemakermodelllmjp13binstructfulljasterdollyoasstv1Role3F3D80FC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1Model89E6FD9E": {
      "DependsOn": [
        "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleDefaultPolicyD06857F2",
        "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleF42A9559",
      ],
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleF42A9559",
            "Arn",
          ],
        },
        "ModelName": "llm-jp-13b-instruct-lora-jaster-dolly-oasst-v1-20231208113413",
        "PrimaryContainer": {
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "DlcRepositoryAccountMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "value",
                  ],
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/djl-inference:0.24.0-deepspeed0.10.0-cu118",
              ],
            ],
          },
          "ModelDataUrl": {
            "Fn::Sub": "https://s3.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}/799a31cec3c3905cf71483c81be42ecfd79be36a3abc7dd58c15a9dc1e29a0fa.gz",
          },
        },
      },
      "Type": "AWS::SageMaker::Model",
    },
    "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleDefaultPolicyD06857F2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "DlcRepositoryAccountMap",
                        {
                          "Ref": "AWS::Region",
                        },
                        "value",
                      ],
                    },
                    ":repository/djl-inference",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleDefaultPolicyD06857F2",
        "Roles": [
          {
            "Ref": "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleF42A9559",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LLMsagemakermodelllmjp13binstructlorajasterdollyoasstv1RoleF42A9559": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8": {
      "DependsOn": [
        "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3",
        "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b49cc8147b0bf86afefc1c551a4b5cf9165167cf31a5d50e4bf169f944f6a363.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ApiBuildWebProjectDF2CE9D0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3",
        "Roles": [
          {
            "Ref": "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
